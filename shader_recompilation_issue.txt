[info] engine.cpp:110 | initialize() | Engine::initialize() started
[info] asset_loader.h:42 | AssetLoader() | AssetLoader created
[info] asset_loader.h:55 | initialize() | AssetLoader initialized
[info] config_manager.cpp:32 | addConfig() | Config loaded: config/resources/paths.json
[info] config_manager.cpp:32 | addConfig() | Config loaded: assets/input\standalone_map.json
[info] input_map.cpp:205 | loadMapFromFile() | Loaded 10 key bindings and 0 mouse bindings for standalone mode
[info] config_manager.cpp:32 | addConfig() | Config loaded: assets/input\editor_map.json
[info] input_map.cpp:205 | loadMapFromFile() | Loaded 9 key bindings and 1 mouse bindings for editor mode
[info] input_manager.cpp:18 | createDefault() | InputManager: Created default GameInputProcessor
[info] config_manager.cpp:32 | addConfig() | Config loaded: config/engine\settings.json
[info] engine.cpp:210 | initialize() | RHI API selected from config: vulkan
[info] engine.cpp:228 | initialize() | GPU profiling disabled at compile time
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] No valid vk_loader_settings.json file found, no loader settings will be active
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_app_package_manifest_path: Failed to find mapping layers packages by family name
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Checking for Layer Manifest files in Registry at HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_add_json_entry: Located json file "C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json" fromPnP registry: E
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files\RenderDoc\renderdoc.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files (x86)\Epic Games\Epic Online Services\managedArtifacts\98bc04bc842e4906993fd6d6644ffb8d\EOSOverlayVkLayer-Win64.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files\NVIDIA Corporation\Nsight Graphics 2024.3.0\target\windows-desktop-nomad-x64\VK_LAYER_NV_nomad_release_public_2024_3_0.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files\NVIDIA Corporation\Nsight Graphics 2024.3.0\target\windows-desktop-nomad-x64\VK_LAYER_NV_GPU_Trace_release_public_2024_3_0.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files\NVIDIA Corporation\Nsight Graphics 2024.3.0\target\windows-desktop-nomad-x64\VK_LAYER_NV_shader_debugger_release_public_2024_3_0.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files\NVIDIA Corporation\Nsight Systems 2024.7.1\target-windows-x64\vulkan-layers\VkLayer_nsight-sys_windows.json"from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\ProgramData\obs-studio-hook\obs-vulkan64.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files (x86)\Steam\SteamOverlayVulkanLayer64.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\Program Files (x86)\Steam\SteamFossilizeVulkanLayer64.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ImplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json (file version 1.0.1)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files\RenderDoc\renderdoc.json (file version 1.1.2)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files (x86)\Epic Games\Epic Online Services\managedArtifacts\98bc04bc842e4906993fd6d6644ffb8d\EOSOverlayVkLayer-Win64.json (file version 1.1.2)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files\NVIDIA Corporation\Nsight Graphics 2024.3.0\target\windows-desktop-nomad-x64\VK_LAYER_NV_nomad_release_public_2024_3_0.json (file version 1.1.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files\NVIDIA Corporation\Nsight Graphics 2024.3.0\target\windows-desktop-nomad-x64\VK_LAYER_NV_GPU_Trace_release_public_2024_3_0.json (file version 1.1.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files\NVIDIA Corporation\Nsight Graphics 2024.3.0\target\windows-desktop-nomad-x64\VK_LAYER_NV_shader_debugger_release_public_2024_3_0.json (file version 1.2.1)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files\NVIDIA Corporation\Nsight Systems 2024.7.1\target-windows-x64\vulkan-layers\VkLayer_nsight-sys_windows.json(file version 1.1.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\ProgramData\obs-studio-hook\obs-vulkan64.json (file version 1.1.2)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files (x86)\Steam\SteamOverlayVulkanLayer64.json (file version 1.0.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\Program Files (x86)\Steam\SteamFossilizeVulkanLayer64.json (file version 1.0.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Checking for Layer Manifest files in Registry at HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_files: opening device PCI\VEN_10DE&DEV_2414&SUBSYS_663019DA&REV_A1\4&2283f625&0&0019
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_entry: Device ID(6) Does not contain a value for "VulkanExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_files: Opening child device 8 - DISPLAY\DELA0D9\5&274F4C17&0&UID20736
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_files: GUID for 8 is not SoftwareComponent skipping
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_files: Opening child device 9 - DISPLAY\SAM7181\5&274F4C17&0&UID20737
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_files: GUID for 9 is not SoftwareComponent skipping
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_device_registry_files: found no registry files
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_api_dump.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_gfxreconstruct.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_synchronization2.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_validation.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_monitor.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_screenshot.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_profiles.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_shader_object.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Located json file "C:\VulkanSDK\1.4.321.1\Bin\VkLayer_crash_diagnostic.json" from registry "HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\ExplicitLayers"
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_api_dump.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_gfxreconstruct.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_synchronization2.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_validation.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_monitor.json (file version 1.0.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_screenshot.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_profiles.json (file version 1.2.1)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_shader_object.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found manifest file C:\VulkanSDK\1.4.321.1\Bin\VkLayer_crash_diagnostic.json (file version 1.2.0)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_get_app_package_manifest_path: Failed to find mapping layers packages by family name
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Checking for Driver Manifestfiles in Registry at HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\Drivers
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] windows_add_json_entry: Located json file "C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json" fromPnP registry: E
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found no registry files in HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\Vulkan\Drivers
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Found ICD manifest file C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json, version 1.0.1
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Searching for ICD drivers named .\nvoglv64.dll
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Loading layer library C:\VulkanSDK\1.4.321.1\Bin\.\VkLayer_khronos_validation.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Insert instance layer "VK_LAYER_KHRONOS_validation" (C:\VulkanSDK\1.4.321.1\Bin\.\VkLayer_khronos_validation.dll)
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Loading layer library C:\ProgramData\obs-studio-hook\.\graphics-hook64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Insert instance layer "VK_LAYER_OBS_HOOK" (C:\ProgramData\obs-studio-hook\.\graphics-hook64.dll)
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Loading layer library C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Insert instance layer "VK_LAYER_NV_gr2608" (C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll)
[trace] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Loading layer library C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Insert instance layer "VK_LAYER_NV_optimus" (C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] vkCreateInstance layer callstack setup to:
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    <Application>
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    <Loader>
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_NV_optimus
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Implicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: Implicit Layer
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]                Disable Env Var:  DISABLE_LAYER_NV_OPTIMUS_1
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_NV_gr2608
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Implicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: Implicit Layer
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]                Disable Env Var:  DISABLE_LAYER_NV_GR2608_1
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_OBS_HOOK
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Implicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: Implicit Layer
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]                Disable Env Var:  DISABLE_VULKAN_OBS_CAPTURE
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\ProgramData\obs-studio-hook\obs-vulkan64.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\ProgramData\obs-studio-hook\.\graphics-hook64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_KHRONOS_validation
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Explicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: By the Application
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_validation.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\VulkanSDK\1.4.321.1\Bin\.\VkLayer_khronos_validation.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    <Drivers>
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [VALIDATION ] [WARNING-CreateInstance-status-message] vkCreateInstance(): Khronos Validation Layer Active:
    Current Enables: None.
    Current Disables: None.

[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Inserted device layer "VK_LAYER_KHRONOS_validation" (C:\VulkanSDK\1.4.321.1\Bin\.\VkLayer_khronos_validation.dll)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Inserted device layer "VK_LAYER_OBS_HOOK" (C:\ProgramData\obs-studio-hook\.\graphics-hook64.dll)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Inserted device layer "VK_LAYER_NV_gr2608" (C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] Inserted device layer "VK_LAYER_NV_optimus" (C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll)
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message] vkCreateDevice layer callstack setup to:
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    <Application>
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    <Loader>
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_NV_optimus
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Implicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: Implicit Layer
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]                Disable Env Var:  DISABLE_LAYER_NV_OPTIMUS_1
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_NV_gr2608
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Implicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: Implicit Layer
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]                Disable Env Var:  DISABLE_LAYER_NV_GR2608_1
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\nv-vk64.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_OBS_HOOK
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Implicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: Implicit Layer
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]                Disable Env Var:  DISABLE_VULKAN_OBS_CAPTURE
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\ProgramData\obs-studio-hook\obs-vulkan64.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\ProgramData\obs-studio-hook\.\graphics-hook64.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    VK_LAYER_KHRONOS_validation
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Type: Explicit
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Enabled By: By the Application
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Manifest: C:\VulkanSDK\1.4.321.1\Bin\VkLayer_khronos_validation.json
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]            Library:  C:\VulkanSDK\1.4.321.1\Bin\.\VkLayer_khronos_validation.dll
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]      ||
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]    <Device>
[info] device_utils_vk.cpp:51 | g_debugCallback() | Vulkan [GENERAL ] [Loader Message]        Using "NVIDIA GeForceRTX 3060 Ti" with driver: "C:\WINDOWS\System32\DriverStore\FileRepository\nv_dispi.inf_amd64_0fb2df354c49e826\.\nvoglv64.dll"
[info] dxc_util.cpp:31 | compileHlslCode() | Compiling shader for target: vs_6_7
[info] dxc_util.cpp:138 | reflectShader() | Shader Reflection: Using SPIR-V backend for stage 1
[debug] dxc_util.cpp:445 | reflectSpirv_() | SPIR-V Reflection: Processing 7 vertex input variables
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 0, name: 'in.var.POSITION0'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 0 to semantic 'POSITION'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'POSITION', location: 0, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 1, name: 'in.var.TEXCOORD1'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 1 to semantic 'TEXCOORD'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'TEXCOORD', location: 1, format: 8
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 2, name: 'in.var.NORMAL2'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 2 to semantic 'NORMAL'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'NORMAL', location: 2, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 3, name: 'in.var.TANGENT3'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 3 to semantic 'TANGENT'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'TANGENT', location:3, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 4, name: 'in.var.BITANGENT4'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 4 to semantic 'BITANGENT'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'BITANGENT', location: 4, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 5, name: 'in.var.COLOR5'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 5 to semantic 'COLOR'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'COLOR', location: 5, format: 14
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 6, name: 'in.var.INSTANCE6'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 6 to semantic 'INSTANCE'
[debug] dxc_util.cpp:514 | reflectSpirv_() | SPIR-V Reflection: Expanding INSTANCE matrix into 4 rows starting at location 6
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 0 at location 6
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 1 at location 7
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 2 at location 8
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 3 at location 9
[info] dxc_util.cpp:538 | reflectSpirv_() | SPIR-V Reflection: Extracted 10 vertex inputs total
[info] dxc_util.cpp:557 | reflectSpirv_() | Extracted 2 resource bindings from SPIRV shader.
[info] dxc_util.cpp:31 | compileHlslCode() | Compiling shader for target: ps_6_7
[info] dxc_util.cpp:138 | reflectShader() | Shader Reflection: Using SPIR-V backend for stage 16
[info] dxc_util.cpp:557 | reflectSpirv_() | Extracted 10 resource bindings from SPIRV shader.
[info] renderer.cpp:98 | initialize() | Renderer initialized successfully
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/logo\arise_logo_icon.png (271x263, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 9 mip levels via stb_image_resize2
[info] window.cpp:46 | setWindowIcon() | Window icon set successfully from: assets/logo\arise_logo_icon.png
[info] engine.cpp:296 | initialize() | Window icon set successfully from: assets/logo\arise_logo_icon.png
[info] light_system.cpp:360 | createEmptyBuffers_() | Created empty light buffers for Vulkan compatibility
[info] light_system.cpp:29 | initialize() | LightSystem initialized
[info] imgui_rhi_context.cpp:337 | initializeVulkan() | Successfully initialized ImGui Vulkan backend
[info] imgui_rhi_context.cpp:89 | initialize() | ImGui RHI context initialized successfully
[info] editor.cpp:1551 | setupInputHandlers_() | Editor input handlers configured with new architecture
[info] editor.cpp:69 | initialize() | Editor initialized successfully
[info] engine.cpp:371 | initialize() | Editor initialized successfully
[info] engine.cpp:390 | initialize() | Engine::initialize() completed
[info] application.cpp:22 | setup() | Application::setup() started
[info] config_manager.cpp:32 | addConfig() | Config loaded: assets/scenes\scene.json
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: Model_WaterBottle.gltf
[info] component_loaders.cpp:217 | g_processEntityComponents() | Starting async load for model: assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[info] asset_loader.h:121 | loadModel() | Queued asset for loading: assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: Model_Avocado.gltf
[info] asset_loader.h:277 | loadModelInternal_() | Loading model: assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[info] component_loaders.cpp:217 | g_processEntityComponents() | Starting async load for model: assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] asset_loader.h:121 | loadModel() | Queued asset for loading: assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: MainCamera
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: DirectionalLight
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: Model_TwoSidedPlane.gltf
[info] component_loaders.cpp:217 | g_processEntityComponents() | Starting async load for model: assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] asset_loader.h:121 | loadModel() | Queued asset for loading: assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: PointLight
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: Model_SciFiHelmet.gltf
[info] component_loaders.cpp:217 | g_processEntityComponents() | Starting async load for model: assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[info] asset_loader.h:121 | loadModel() | Queued asset for loading: assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[info] component_loaders.cpp:175 | g_createEntityFromConfig() | Created entity: Model_Duck.gltf
[info] component_loaders.cpp:217 | g_processEntityComponents() | Starting async load for model: assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[info] asset_loader.h:121 | loadModel() | Queued asset for loading: assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[info] application.cpp:39 | setup() | Application::setup() completed
[debug] cgltf_model_loader.cpp:485 | processBoundingBox() | Bounding box extracted from GLTF accessor data
[debug] cgltf_model_loader.cpp:78 | loadModel() | Mesh 'WaterBottle' bounding box: min(-0.05445001, -0.13022034, -0.054450024) max(0.05445001, 0.13022034, 0.054450024)
[info] cgltf_model_loader.cpp:97 | loadModel() | Model 'WaterBottle.gltf' combined bounding box calculated from 1 meshes
[info] cgltf_material_loader.cpp:17 | loadMaterials() | Loading materials from assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[warning] cgltf_material_loader.cpp:90 | loadTextures() | Image is null for base color texture
[info] engine.cpp:147 | operator () | Window resize in editor mode - ignoring renderer resize
[info] light_system.cpp:263 | createOrUpdateDescriptorSet_() | Created new light descriptor set
[info] renderer.cpp:343 | onViewportResize() | Resizing viewport to 2032x1046
[debug] resource_deletion_manager.h:49 | enqueueForDeletion<struct VkDescriptorSet_T*>() | VkDescriptorSet 'ImGui_DescriptorSet_96757023244376' scheduled for deletion in 3 frames (frame 3)
[info] renderer.cpp:343 | onViewportResize() | Resizing viewport to 1470x1027
[debug] resource_deletion_manager.h:49 | enqueueForDeletion<struct VkDescriptorSet_T*>() | VkDescriptorSet 'ImGui_DescriptorSet_125344325566578' scheduled for deletion in 3 frames (frame 4)
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle_baseColor.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'WaterBottle_baseColor.png' with dimensions 2048x2048
[warning] cgltf_material_loader.cpp:109 | loadTextures() | Image is null for metallic roughness texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle_occlusionRoughnessMetallic.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'WaterBottle_occlusionRoughnessMetallic.png' with dimensions 2048x2048
[warning] cgltf_material_loader.cpp:128 | loadTextures() | Image is null for normal map texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle_normal.png(2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'WaterBottle_normal.png' with dimensions 2048x2048
[info] cgltf_material_loader.cpp:28 | loadMaterials() | Successfully loaded 1 material(s) from assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[info] buffer_manager.cpp:73 | createVertexBuffer() | Created vertex buffer 'VertexBuffer_WaterBottle' with 2549 vertices
[info] buffer_manager.cpp:120 | createIndexBuffer() | Created index buffer 'IndexBuffer_WaterBottle' with 13530 indices
[info] buffer_manager.cpp:164 | createUniformBuffer() | Created uniform buffer 'transform_matrix_WaterBottle' with size 64 bytes
[debug] cgltf_render_model_loader.cpp:104 | loadRenderModel() | Created transform matrix buffer for mesh WaterBottle
[info] asset_loader.h:282 | loadModelInternal_() | Successfully loaded GPU model: assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[info] component_loaders.cpp:261 | operator () | Async model load completed (GPU=yes) for: assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[debug] bounding_volume_system.cpp:27 | update() | Added WorldBounds component to entity 0
[info] asset_loader.h:277 | loadModelInternal_() | Loading model: assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[debug] bounding_volume_system.cpp:73 | updateEntityWorldBounds_() | BoundingVolumeSystem: Updated world bounds forentity 0 using model: assets/models\gltf\2.0\WaterBottle\glTF\WaterBottle.gltf
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 10 attributes
[info] base_pass.cpp:318 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 10 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 5
[debug] cgltf_model_loader.cpp:485 | processBoundingBox() | Bounding box extracted from GLTF accessor data
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[debug] cgltf_model_loader.cpp:78 | loadModel() | Mesh 'Avocado' bounding box: min(-0.02128091, -4.773855e-05, -0.013809) max(0.02128091, 0.06284806, 0.013809001)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 4 bindings
[info] cgltf_model_loader.cpp:97 | loadModel() | Model 'Avocado.gltf' combined bounding box calculated from 1 meshes
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] cgltf_material_loader.cpp:17 | loadMaterials() | Loading materials from assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: BufferSrv (count: 1)
[warning] cgltf_material_loader.cpp:90 | loadTextures() | Image is null for base color texture
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 4: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 5 descriptor set layouts
[info] base_pass.cpp:375 | prepareDrawCalls_() | BasePass: Created pipeline with 5 automatically generated descriptor sets
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models/gltf/2.0/Avocado\glTF\Avocado_baseColor.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'Avocado_baseColor.png' with dimensions 2048x2048
[warning] cgltf_material_loader.cpp:109 | loadTextures() | Image is null for metallic roughness texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models/gltf/2.0/Avocado\glTF\Avocado_roughnessMetallic.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'Avocado_roughnessMetallic.png' with dimensions 2048x2048
[warning] cgltf_material_loader.cpp:128 | loadTextures() | Image is null for normal map texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models/gltf/2.0/Avocado\glTF\Avocado_normal.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'Avocado_normal.png' with dimensions 2048x2048
[info] cgltf_material_loader.cpp:28 | loadMaterials() | Successfully loaded 1 material(s) from assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] buffer_manager.cpp:73 | createVertexBuffer() | Created vertex buffer 'VertexBuffer_Avocado' with 406 vertices
[info] buffer_manager.cpp:120 | createIndexBuffer() | Created index buffer 'IndexBuffer_Avocado' with 2046 indices
[info] buffer_manager.cpp:164 | createUniformBuffer() | Created uniform buffer 'transform_matrix_Avocado' with size64 bytes
[debug] cgltf_render_model_loader.cpp:104 | loadRenderModel() | Created transform matrix buffer for mesh Avocado
[info] asset_loader.h:282 | loadModelInternal_() | Successfully loaded GPU model: assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] component_loaders.cpp:261 | operator () | Async model load completed (GPU=yes) for: assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] asset_loader.h:277 | loadModelInternal_() | Loading model: assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[debug] bounding_volume_system.cpp:27 | update() | Added WorldBounds component to entity 1
[debug] bounding_volume_system.cpp:73 | updateEntityWorldBounds_() | BoundingVolumeSystem: Updated world bounds forentity 1 using model: assets/models/gltf/2.0/Avocado\glTF\Avocado.gltf
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 10 attributes
[info] base_pass.cpp:318 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 10 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[debug] cgltf_model_loader.cpp:485 | processBoundingBox() | Bounding box extracted from GLTF accessor data
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 5
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[debug] cgltf_model_loader.cpp:78 | loadModel() | Mesh 'TwoSidedPlane' bounding box: min(-1, 0, -1) max(1, 0, 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] cgltf_model_loader.cpp:97 | loadModel() | Model 'TwoSidedPlane.gltf' combined bounding box calculated from 1meshes
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] cgltf_material_loader.cpp:17 | loadMaterials() | Loading materials from assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 4 bindings
[warning] cgltf_material_loader.cpp:90 | loadTextures() | Image is null for base color texture
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 4: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 5 descriptor set layouts
[info] base_pass.cpp:375 | prepareDrawCalls_() | BasePass: Created pipeline with 5 automatically generated descriptor sets
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models/gltf/2.0/TwoSidedPlane/glTF\TwoSidedPlane_BaseColor.png (256x256, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 9 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'TwoSidedPlane_BaseColor.png' with dimensions 256x256
[warning] cgltf_material_loader.cpp:109 | loadTextures() | Image is null for metallic roughness texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models/gltf/2.0/TwoSidedPlane/glTF\TwoSidedPlane_MetallicRoughness.png (256x256, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 9 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'TwoSidedPlane_MetallicRoughness.png' with dimensions 256x256
[warning] cgltf_material_loader.cpp:128 | loadTextures() | Image is null for normal map texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models/gltf/2.0/TwoSidedPlane/glTF\TwoSidedPlane_Normal.png (256x256, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 9 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'TwoSidedPlane_Normal.png' with dimensions 256x256
[info] cgltf_material_loader.cpp:28 | loadMaterials() | Successfully loaded 1 material(s) from assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] buffer_manager.cpp:73 | createVertexBuffer() | Created vertex buffer 'VertexBuffer_TwoSidedPlane' with 6 vertices
[info] buffer_manager.cpp:120 | createIndexBuffer() | Created index buffer 'IndexBuffer_TwoSidedPlane' with 6 indices
[info] buffer_manager.cpp:164 | createUniformBuffer() | Created uniform buffer 'transform_matrix_TwoSidedPlane' with size 64 bytes
[debug] cgltf_render_model_loader.cpp:104 | loadRenderModel() | Created transform matrix buffer for mesh TwoSidedPlane
[info] asset_loader.h:282 | loadModelInternal_() | Successfully loaded GPU model: assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] component_loaders.cpp:261 | operator () | Async model load completed (GPU=yes) for: assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] asset_loader.h:277 | loadModelInternal_() | Loading model: assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[debug] bounding_volume_system.cpp:27 | update() | Added WorldBounds component to entity 4
[debug] bounding_volume_system.cpp:73 | updateEntityWorldBounds_() | BoundingVolumeSystem: Updated world bounds forentity 4 using model: assets/models/gltf/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 10 attributes
[info] base_pass.cpp:318 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 10 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 5
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 4: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 5 descriptor set layouts
[info] base_pass.cpp:375 | prepareDrawCalls_() | BasePass: Created pipeline with 5 automatically generated descriptor sets
[debug] cgltf_model_loader.cpp:485 | processBoundingBox() | Bounding box extracted from GLTF accessor data
[debug] cgltf_model_loader.cpp:78 | loadModel() | Mesh 'SciFiHelmet' bounding box: min(-1.1511525, -1.4587183, -1.2511287) max(1.1511525, 1.4587184, 1.2511277)
[info] cgltf_model_loader.cpp:97 | loadModel() | Model 'SciFiHelmet.gltf' combined bounding box calculated from 1 meshes
[info] cgltf_material_loader.cpp:17 | loadMaterials() | Loading materials from assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[warning] cgltf_material_loader.cpp:90 | loadTextures() | Image is null for base color texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet_BaseColor.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'SciFiHelmet_BaseColor.png' with dimensions 2048x2048
[warning] cgltf_material_loader.cpp:109 | loadTextures() | Image is null for metallic roughness texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet_MetallicRoughness.png (2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'SciFiHelmet_MetallicRoughness.png' with dimensions 2048x2048
[warning] cgltf_material_loader.cpp:128 | loadTextures() | Image is null for normal map texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet_Normal.png(2048x2048, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 12 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'SciFiHelmet_Normal.png' with dimensions 2048x2048
[info] cgltf_material_loader.cpp:28 | loadMaterials() | Successfully loaded 1 material(s) from assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[info] buffer_manager.cpp:73 | createVertexBuffer() | Created vertex buffer 'VertexBuffer_SciFiHelmet' with 70074 vertices
[info] buffer_manager.cpp:120 | createIndexBuffer() | Created index buffer 'IndexBuffer_SciFiHelmet' with 70074 indices
[info] buffer_manager.cpp:164 | createUniformBuffer() | Created uniform buffer 'transform_matrix_SciFiHelmet' with size 64 bytes
[debug] cgltf_render_model_loader.cpp:104 | loadRenderModel() | Created transform matrix buffer for mesh SciFiHelmet
[info] asset_loader.h:282 | loadModelInternal_() | Successfully loaded GPU model: assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[info] component_loaders.cpp:261 | operator () | Async model load completed (GPU=yes) for: assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[info] asset_loader.h:277 | loadModelInternal_() | Loading model: assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[debug] bounding_volume_system.cpp:27 | update() | Added WorldBounds component to entity 6
[debug] bounding_volume_system.cpp:73 | updateEntityWorldBounds_() | BoundingVolumeSystem: Updated world bounds forentity 6 using model: assets/models\gltf\2.0\SciFiHelmet\glTF\SciFiHelmet.gltf
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 10 attributes
[info] base_pass.cpp:318 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 10 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 5
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 4: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 5 descriptor set layouts
[info] base_pass.cpp:375 | prepareDrawCalls_() | BasePass: Created pipeline with 5 automatically generated descriptor sets
[debug] cgltf_model_loader.cpp:485 | processBoundingBox() | Bounding box extracted from GLTF accessor data
[debug] cgltf_model_loader.cpp:436 | generateMikkTSpaceTangents() | MikkTSpace tangent generation completed
[debug] cgltf_model_loader.cpp:78 | loadModel() | Mesh 'LOD3spShape' bounding box: min(-69.2985, 9.92937, -61.328197) max(96.1799, 163.97, 53.925198)
[info] cgltf_model_loader.cpp:97 | loadModel() | Model 'Duck.gltf' combined bounding box calculated from 1 meshes
[info] cgltf_material_loader.cpp:17 | loadMaterials() | Loading materials from assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[warning] cgltf_material_loader.cpp:90 | loadTextures() | Image is null for base color texture
[debug] stb_util.cpp:124 | loadImageData_() | Loaded assets/models\gltf\2.0\Duck\glTF\DuckCM.png (512x512, RGBA, 8 bpc)
[debug] stb_util.cpp:194 | generateMipmaps_() | Generated 10 mip levels via stb_image_resize2
[info] texture_manager.cpp:110 | createTexture() | Created texture 'DuckCM.png' with dimensions 512x512
[info] cgltf_material_loader.cpp:28 | loadMaterials() | Successfully loaded 1 material(s) from assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[info] buffer_manager.cpp:73 | createVertexBuffer() | Created vertex buffer 'VertexBuffer_LOD3spShape' with 2399 vertices
[info] buffer_manager.cpp:120 | createIndexBuffer() | Created index buffer 'IndexBuffer_LOD3spShape' with 12636 indices
[info] buffer_manager.cpp:164 | createUniformBuffer() | Created uniform buffer 'transform_matrix_LOD3spShape' with size 64 bytes
[debug] cgltf_render_model_loader.cpp:104 | loadRenderModel() | Created transform matrix buffer for mesh LOD3spShape
[info] asset_loader.h:282 | loadModelInternal_() | Successfully loaded GPU model: assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[info] component_loaders.cpp:261 | operator () | Async model load completed (GPU=yes) for: assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[debug] bounding_volume_system.cpp:27 | update() | Added WorldBounds component to entity 7
[debug] bounding_volume_system.cpp:73 | updateEntityWorldBounds_() | BoundingVolumeSystem: Updated world bounds forentity 7 using model: assets/models\gltf\2.0\Duck\glTF\Duck.gltf
[debug] base_pass.cpp:481 | getOrCreateMaterialDescriptorSet_() | Using fallback texture for 'normal_map' in material: blinn3-fx
[debug] base_pass.cpp:481 | getOrCreateMaterialDescriptorSet_() | Using fallback texture for 'metallic_roughness' in material: blinn3-fx
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 10 attributes
[info] base_pass.cpp:318 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 10 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 5
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: BufferSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 4 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 1: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 2: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 3: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 4: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 5 descriptor set layouts
[info] base_pass.cpp:375 | prepareDrawCalls_() | BasePass: Created pipeline with 5 automatically generated descriptor sets
[info] dxc_util.cpp:31 | compileHlslCode() | Compiling shader for target: vs_6_7
[info] dxc_util.cpp:138 | reflectShader() | Shader Reflection: Using SPIR-V backend for stage 1
[debug] dxc_util.cpp:445 | reflectSpirv_() | SPIR-V Reflection: Processing 3 vertex input variables
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 0, name: 'in.var.POSITION0'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 0 to semantic 'POSITION'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'POSITION', location: 0, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 5, name: 'in.var.COLOR5'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 5 to semantic 'COLOR'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'COLOR', location: 5, format: 14
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 6, name: 'in.var.INSTANCE6'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 6 to semantic 'INSTANCE'
[debug] dxc_util.cpp:514 | reflectSpirv_() | SPIR-V Reflection: Expanding INSTANCE matrix into 4 rows starting at location 6
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 0 at location 6
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 1 at location 7
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 2 at location 8
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 3 at location 9
[info] dxc_util.cpp:538 | reflectSpirv_() | SPIR-V Reflection: Extracted 6 vertex inputs total
[info] dxc_util.cpp:557 | reflectSpirv_() | Extracted 2 resource bindings from SPIRV shader.
[info] dxc_util.cpp:31 | compileHlslCode() | Compiling shader for target: ps_6_7
[info] dxc_util.cpp:138 | reflectShader() | Shader Reflection: Using SPIR-V backend for stage 16
[info] dxc_util.cpp:557 | reflectSpirv_() | Extracted 0 resource bindings from SPIRV shader.
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 6 attributes
[info] wireframe_strategy.cpp:276 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 6 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 2
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 2 descriptor set layouts
[info] wireframe_strategy.cpp:325 | prepareDrawCalls_() | WireframeStrategy: Created pipeline with 2 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 6 attributes
[info] wireframe_strategy.cpp:276 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 6 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 2
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 2 descriptor set layouts
[info] wireframe_strategy.cpp:325 | prepareDrawCalls_() | WireframeStrategy: Created pipeline with 2 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 6 attributes
[info] wireframe_strategy.cpp:276 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 6 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 2
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 2 descriptor set layouts
[info] wireframe_strategy.cpp:325 | prepareDrawCalls_() | WireframeStrategy: Created pipeline with 2 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 6 attributes
[info] wireframe_strategy.cpp:276 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 6 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 2
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 2 descriptor set layouts
[info] wireframe_strategy.cpp:325 | prepareDrawCalls_() | WireframeStrategy: Created pipeline with 2 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 6 attributes
[info] wireframe_strategy.cpp:276 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 6 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 2
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 2 descriptor set layouts
[info] wireframe_strategy.cpp:325 | prepareDrawCalls_() | WireframeStrategy: Created pipeline with 2 automatically generated descriptor sets
[info] pipeline_layout_manager.cpp:29 | cleanup() | Cleaning up 10 managed layouts
[info] pipeline_layout_manager.cpp:29 | cleanup() | Cleaning up 0 managed layouts
[info] dxc_util.cpp:31 | compileHlslCode() | Compiling shader for target: vs_6_7
[info] dxc_util.cpp:138 | reflectShader() | Shader Reflection: Using SPIR-V backend for stage 1
[debug] dxc_util.cpp:445 | reflectSpirv_() | SPIR-V Reflection: Processing 6 vertex input variables
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 0, name: 'in.var.POSITION0'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 0 to semantic 'POSITION'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'POSITION', location: 0, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 1, name: 'in.var.TEXCOORD1'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 1 to semantic 'TEXCOORD'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'TEXCOORD', location: 1, format: 8
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 2, name: 'in.var.NORMAL2'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 2 to semantic 'NORMAL'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'NORMAL', location: 2, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 3, name: 'in.var.TANGENT3'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 3 to semantic 'TANGENT'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'TANGENT', location:3, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 4, name: 'in.var.BITANGENT4'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 4 to semantic 'BITANGENT'
[debug] dxc_util.cpp:526 | reflectSpirv_() | SPIR-V Reflection: Added vertex input - semantic: 'BITANGENT', location: 4, format: 11
[debug] dxc_util.cpp:458 | reflectSpirv_() | SPIR-V Reflection: Input variable - location: 6, name: 'in.var.INSTANCE6'
[debug] dxc_util.cpp:480 | reflectSpirv_() | SPIR-V Reflection: Mapped location 6 to semantic 'INSTANCE'
[debug] dxc_util.cpp:514 | reflectSpirv_() | SPIR-V Reflection: Expanding INSTANCE matrix into 4 rows starting at location 6
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 0 at location 6
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 1 at location 7
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 2 at location 8
[debug] dxc_util.cpp:522 | reflectSpirv_() | SPIR-V Reflection: Added INSTANCE row 3 at location 9
[info] dxc_util.cpp:538 | reflectSpirv_() | SPIR-V Reflection: Extracted 9 vertex inputs total
[info] dxc_util.cpp:557 | reflectSpirv_() | Extracted 2 resource bindings from SPIRV shader.
[info] dxc_util.cpp:31 | compileHlslCode() | Compiling shader for target: ps_6_7
[info] dxc_util.cpp:138 | reflectShader() | Shader Reflection: Using SPIR-V backend for stage 16
[info] dxc_util.cpp:557 | reflectSpirv_() | Extracted 2 resource bindings from SPIRV shader.
[debug] normal_map_visualization_strategy.cpp:432 | getOrCreateMaterialDescriptorSet_() | Using fallback normal maptexture for material: blinn3-fx
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 9 attributes
[info] normal_map_visualization_strategy.cpp:300 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 9 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 4
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 4 descriptor set layouts
[info] normal_map_visualization_strategy.cpp:351 | prepareDrawCalls_() | Created pipeline with 4 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 9 attributes
[info] normal_map_visualization_strategy.cpp:300 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 9 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 4
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 4 descriptor set layouts
[info] normal_map_visualization_strategy.cpp:351 | prepareDrawCalls_() | Created pipeline with 4 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 9 attributes
[info] normal_map_visualization_strategy.cpp:300 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 9 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 4
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 4 descriptor set layouts
[info] normal_map_visualization_strategy.cpp:351 | prepareDrawCalls_() | Created pipeline with 4 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 9 attributes
[info] normal_map_visualization_strategy.cpp:300 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 9 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 4
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 4 descriptor set layouts
[info] normal_map_visualization_strategy.cpp:351 | prepareDrawCalls_() | Created pipeline with 4 automatically generated descriptor sets
[info] vertex_input_builder.cpp:176 | createFromReflection() | Created vertex input layout: 2 bindings, 9 attributes
[info] normal_map_visualization_strategy.cpp:300 | prepareDrawCalls_() | Generated vertex input from shader reflection: 2 bindings, 9 attributes
[info] pipeline_utils.cpp:26 | generatePipelineLayoutFromShaders() | Generated pipeline layout from shader reflection:
[info] shader_reflection_utils.cpp:11 | logPipelineLayoutContents() | Pipeline Layout Description:
[info] shader_reflection_utils.cpp:12 | logPipelineLayoutContents() |   Push Constant Size: 0 bytes
[info] shader_reflection_utils.cpp:13 | logPipelineLayoutContents() |   Descriptor Sets: 4
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 0: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 1: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: UniformBuffer (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 2: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: TextureSrv (count: 1)
[info] shader_reflection_utils.cpp:17 | logPipelineLayoutContents() |     Set 3: 1 bindings
[info] shader_reflection_utils.cpp:20 | logPipelineLayoutContents() |       Binding 0: Sampler (count: 1)
[info] pipeline_layout_manager.cpp:23 | createAndManageLayouts() | Created and managing 4 descriptor set layouts
[info] normal_map_visualization_strategy.cpp:351 | prepareDrawCalls_() | Created pipeline with 4 automatically generated descriptor sets
